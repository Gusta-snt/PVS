{
 "binary_tree_nat.height_grater_than_two": [
  {
   "info": {
    "theory": "binary_tree_nat",
    "formula": "height_grater_than_two",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "114399cc49a3150cb6d600ed35ca775107e3705daf2e384413067b408df03006"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "height_grater_than_two",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(expand height)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "binary_tree_nat.height_equal_two": [
  {
   "info": {
    "theory": "binary_tree_nat",
    "formula": "height_equal_two",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "c1a0f99a4cf5f47bc80497dffb7e465d09a6b58a1969588ced2bc13788597bda"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "height_equal_two",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "binary_tree_nat.size_equal_three": [
  {
   "info": {
    "theory": "binary_tree_nat",
    "formula": "size_equal_three",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "c1a0f99a4cf5f47bc80497dffb7e465d09a6b58a1969588ced2bc13788597bda"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "size_equal_three",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(expand ex1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(grind)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "binary_tree_nat.ex1_inorder": [
  {
   "info": {
    "theory": "binary_tree_nat",
    "formula": "ex1_inorder",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "c80e301b4b0149bd9d8627d56f9d05fcfbcc983dddcef5fd694cfc1838c2bb0c"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "ex1_inorder",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(expand ex1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand inorder)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand inorder)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand inorder)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand append)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand append)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "binary_tree_nat.height_TCC1": [
  {
   "info": {
    "theory": "binary_tree_nat",
    "formula": "height_TCC1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "c1a0f99a4cf5f47bc80497dffb7e465d09a6b58a1969588ced2bc13788597bda"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "height_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(termination-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "binary_tree_nat.height_TCC2": [
  {
   "info": {
    "theory": "binary_tree_nat",
    "formula": "height_TCC2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "c1a0f99a4cf5f47bc80497dffb7e465d09a6b58a1969588ced2bc13788597bda"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "height_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(termination-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "binary_tree_nat.size_equal_length": [
  {
   "info": {
    "theory": "binary_tree_nat",
    "formula": "size_equal_length",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "99b2346ed0b0a85c70d14b2d04ce8dceb690fea3a4f342ec1bc8357409982dd5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "size_equal_length",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(use BinaryTreeNat_induction)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(hide 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(skolem 1 (\"l\" \"e\" \"r\"))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(expand \"size\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(expand \"inorder\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(replace -1 :hide? t)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(replace -1 :hide? t)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(use \"length_append[nat]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "3",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "binary_tree_nat.mirror_correct": [
  {
   "info": {
    "theory": "binary_tree_nat",
    "formula": "mirror_correct",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "99b2346ed0b0a85c70d14b2d04ce8dceb690fea3a4f342ec1bc8357409982dd5"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "mirror_correct",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(induct \"t\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(skolem 1 (\"l\" \"e\" \"r\"))",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"mirror\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"reflection?\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"inorder\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"reflection?\" -)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(replace -1 :hide? t)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(replace -1 :hide? t)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(use \"reverse_append[nat]\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(replace -1 :hide? t)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"reverse\" 1 3)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(use \"append_append_cons[nat]\")",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ]
}