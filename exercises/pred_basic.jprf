{
 "pred_basic.quant_0": [
  {
   "info": {
    "theory": "pred_basic",
    "formula": "quant_0",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ebf18abbf27c440bd8aed5436f4795df647eefcfa4ca4d66ceee271894436881"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quant_0",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 a)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "pred_basic.quant_1": [
  {
   "info": {
    "theory": "pred_basic",
    "formula": "quant_1",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ebf18abbf27c440bd8aed5436f4795df647eefcfa4ca4d66ceee271894436881"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quant_1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 a)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "pred_basic.quant_2": [
  {
   "info": {
    "theory": "pred_basic",
    "formula": "quant_2",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ebf18abbf27c440bd8aed5436f4795df647eefcfa4ca4d66ceee271894436881"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quant_2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 a)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst 1 a)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "pred_basic.quant_3": [
  {
   "info": {
    "theory": "pred_basic",
    "formula": "quant_3",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ebf18abbf27c440bd8aed5436f4795df647eefcfa4ca4d66ceee271894436881"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quant_3",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skeep 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst 2 x)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "pred_basic.quant_5": [
  {
   "info": {
    "theory": "pred_basic",
    "formula": "quant_5",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ebf18abbf27c440bd8aed5436f4795df647eefcfa4ca4d66ceee271894436881"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quant_5",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst 1 x)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -1 x)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "pred_basic.quant_4": [
  {
   "info": {
    "theory": "pred_basic",
    "formula": "quant_4",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "ebf18abbf27c440bd8aed5436f4795df647eefcfa4ca4d66ceee271894436881"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "quant_4",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(split)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(inst 2 x)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(inst -1 x)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ]
}